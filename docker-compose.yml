version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: spotijudge
      POSTGRES_USER: spotijudge_user
      POSTGRES_PASSWORD: spotijudge_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spotijudge_user -d spotijudge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flask Web Application  
  web:
    build: .
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://spotijudge_user:spotijudge_password@db:5432/spotijudge
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REDIRECT_URI=${SPOTIFY_REDIRECT_URI}
    volumes:
      - .:/app:ro  # Read-only mount for development
    depends_on:
      db:
        condition: service_healthy
    command: python app.py

  # Redis for session storage (optional enhancement)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: